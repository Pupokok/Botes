from aiogram.types import Message
from aiogram.enums import ChatAction
from aiogram import types, F, Router
from aiogram.utils.deep_linking import decode_payload
from aiogram.utils.chat_action import ChatActionSender
from aiogram.utils.deep_linking import create_start_link
from aiogram.filters import CommandStart, CommandObject, Command

from dotenv import load_dotenv

from data_base.requests import get_end_time, get_ref, get_time, get_vouchers, set_user

from inline_keyboards import first_inkb_bd, get_5K_inkb, support_inkb, mine_inkb

from keyboards.builders import rep_builder_video
from keyboards.client_kb import kb_client_main, kb_active_client_main

from pay.payment import buy_subs

from text.text_for_bot import Texts


load_dotenv()
router = Router()


@router.message(CommandStart())
async def start(message: Message, command: CommandObject):
    mes_id = message.from_user.id
    if command.args:
        try:
            referral_id = int(decode_payload(command.args))                             # –ü–æ–ø—ã—Ç–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å referral_id –∫ —Ü–µ–ª–æ–º—É —á–∏—Å–ª—É
            if referral_id == mes_id:
                await message.answer("–ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É!!!",      # –°–ª—É—á–∞–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
                                     reply_markup=kb_client_main)
            else:
                await message.answer(text=Texts.text_greeting,                    # –°–ª—É—á–∞–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è                   
                                     reply_markup=await first_inkb_bd())
                await set_user(mes_id, referral_id)
        except ValueError:
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏.")
    else:
        await message.answer(text=Texts.text_greeting,                                # –°–ª—É—á–∞–π –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
                             reply_markup=await first_inkb_bd())
        await set_user(mes_id)
        

@router.message(F.text == "–ü–æ–ª—É—á–∏—Ç—å 5.000‚ÇΩ üí∏")
async def get_5k(message: Message):
    await message.answer(text=Texts.get_5k_text,
                         reply_markup=get_5K_inkb)


@router.message(F.text == "–ó–∞–±—Ä–∞—Ç—å –≤–∞—É—á–µ—Ä üéüÔ∏è")
async def vauch(message: Message):
    await message.answer(text=Texts.vauch_hand)

@router.message(F.text == "üéüÔ∏è –í–∞—É—á–µ—Ä")
async def vauch_active(message: Message):
    vouchers = await get_vouchers()
    if not vouchers:
        await message.answer(text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∞—É—á–µ—Ä–æ–≤.")
    else:
        await message.answer(text=vouchers)
        # await message.answer(text=Texts.vauch_active)

@router.message(F.text == "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞ üéÅ")
async def vauch(message: Message):
    await message.answer(text=Texts.vauch_hand)


@router.message(F.text == "–û–±—É—á–µ–Ω–∏–µ üïπÔ∏è")
async def trening(message: Message):
    await message.answer(text="–ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∏ —É–∑–Ω–∞–π—Ç–µ –æ—Å–Ω–æ–≤—ã",
                         reply_markup=await rep_builder_video())


@router.message((F.text == "–ú–æ—Ç–∏–≤–∞—Ü–∏—è") | (F.text == "1 –£—Ä–æ–∫"))
async def send_video(message: Message):
    sender = ChatActionSender(
        bot=message.bot,
        chat_id=message.chat.id,
        action=ChatAction.UPLOAD_VIDEO,)
    async with sender:
            if F.text == "–ú–æ—Ç–∏–≤–∞—Ü–∏—è":
                await message.answer_video(video=types.FSInputFile(
                    "/home/feofan/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/rocket_queen/kwork/video/IMG_9013.MP4"))
            elif F.text == "1 –£—Ä–æ–∫":
                await message.answer_video(video=types.FSInputFile(
                    "/home/feofan/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/rocket_queen/kwork/video/IMG_9014.MP4"))


@router.message(F.text == "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è üÜì")
async def strateg(message: Message):
    sender = ChatActionSender(
        bot=message.bot,
        chat_id=message.chat.id,
        action=ChatAction.UPLOAD_VIDEO,)
    async with sender:
        await message.answer_video(video=types.FSInputFile("/home/feofan/–†–∞–±–æ—á–∏–π —Å—Ç–æ–ª/rocket_queen/kwork/video/IMG_9013.MP4"))


@router.message(F.text == "–ú–∏–Ω—ã üí£")
async def mines(message: Message):
    await message.answer(text=Texts.mines,
                         reply_markup=mine_inkb)


@router.message(F.text == "‚öôÔ∏è –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
async def supports(message: Message):
    await message.answer(text=Texts.support,
                         reply_markup=support_inkb)


@router.message(F.text == "–ù–∞–∑–∞–¥")
async def back(message: Message):
    await message.answer(text="–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é",
                         reply_markup=kb_client_main)

@router.message(F.text == "üéÅ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞")
async def invite_friend(message: Message):
    mes_id = message.from_user.id
    ref = await get_ref(mes_id)
    link = await create_start_link(message.bot, payload=str(mes_id), encode=True)
    inv = Texts.invite(link, ref)
    await message.answer(text=inv)

@router.message(Command("main"))
async def main_keyb(message: Message):
    await message.answer(text="–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é",
                               reply_markup=kb_client_main) 

@router.message(Command("active", prefix=("1!?")))
async def active_keyb(message: Message):
    times_end = await get_end_time(message.from_user.id)
    if times_end:
        await message.answer(text="–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                                   reply_markup=kb_active_client_main) 
    else:
        await message.answer(text="–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –æ–ø–ª–∞—á–µ–Ω–∞",
                                   reply_markup=kb_client_main) 
        await buy_subs(message)        
        

@router.message(F.text == "üíº –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
async def profile(message: Message, ):
    getting = await get_time(message.from_user.id)
    pers_inf = f"–ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: {getting} –¥–Ω–µ–π" 
    await message.answer(text=pers_inf,
                         reply_markup=kb_active_client_main)


@router.message(F.text == "üìö –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
async def instructions(message: Message):
    await message.answer(text=Texts.instruc,
                         reply_markup=kb_active_client_main) 
